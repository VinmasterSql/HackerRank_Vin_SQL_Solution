Given the table schemas below, write a query to print the company_code, founder name, total number of lead managers,
total number of senior managers, total number of managers, and total number of employees. Order your output by ascending company_code.

Note:
The tables may contain duplicate records.
The company_code is string, so the sorting should not be numeric. For example, 
if the company_codes are C_1, C_2, and C_10, then the ascending company_codes will be C_1, C_10, and C_2.


############ SOLUTION 1 #########

 SELECT C.company_code, C.founder,
       COUNT(DISTINCT E.lead_manager_code),
       COUNT(DISTINCT E.senior_manager_code),
       COUNT(DISTINCT E.manager_code),
       COUNT(DISTINCT E.employee_code)
FROM Company C INNER JOIN Employee E ON C.Company_Code = E.Company_Code
GROUP BY C.Company_Code, C.Founder 
ORDER BY C.Company_Code;

############ SOLUTION 2 #########

 SELECT C.company_code, C.founder, 
    COUNT(DISTINCT LM.lead_manager_code), 
    COUNT(DISTINCT SM.senior_manager_code),
    COUNT(DISTINCT M.manager_code), 
    COUNT(DISTINCT E.employee_code) 
 FROM Company C INNER JOIN Lead_Manager LM ON C.company_code=LM.company_code 
                INNER JOIN Senior_Manager SM ON LM.lead_manager_code=SM.lead_manager_code
                INNER JOIN Manager M ON SM.senior_manager_code=M.senior_manager_code
                INNER JOIN Employee E ON E.manager_code=M.manager_code
 GROUP BY C.company_code, C.founder
 ORDER BY C.company_code, C.founder;
